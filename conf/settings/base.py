"""
Django settings for withwebpack project.

Generated by 'django-admin startproject' using Django 1.10.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

# This file contains only the settings that will remain the same through
# the software development cycle. Settings that change from stage to
# stage in development are pulled out into dev_sqlite3.py, dev_oracle.py,
# integration.py, qa.py, and prod.py. Each of those files will import
# this one.

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ygt_69!zmg+(qw68ugx2*evnr5gmqt++9n9j%ju%7bic%k^pq$'

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'crispy_forms',
    'bootstrap_pagination',
    'rest_framework',

    'nlm.occs.casauth',
    'nlm.occs.useradm',
    'nlm.occs.nlmcore',

    'django_cas_ng',

    'moviedb',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'nlm.occs.casauth.middleware.CASMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'conf.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ os.path.join(BASE_DIR, '../templates'), ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'nlm.occs.context_processors.remote_may_login',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'conf.wsgi.application'

TEST_RUNNER = 'django_nose.NoseTestSuiteRunner'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

# Database information is not specified here; look in the
# file settings/dev_sqlite3.py etc. for the settings relevant
# to each stage of development.

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

# There are two settings associated with paths and static files.
# STATICFILES_DIRS tells Django where to find the files to serve
# during development; STATIC_URL tells Django how to create a URL to
# the static files.

# STATICFILES_DIRS = [
# 	# os.path.join( BASE_DIR, '../assets/3.4.1/' ),
# ]

STATIC_URL = '/static/'

# This entry names the directory into which "manage.py collectstatic"
# will gather the static files when it's time to move to the
# integration server.
STATIC_ROOT = os.path.join(BASE_DIR, "../public")

# Let the crispy-forms package know that it should use Bootstrap3 markup.
CRISPY_TEMPLATE_PACK = 'bootstrap3'

# Tell the 'assets_static' template tag
ASSETS_STATIC_REMOTE_PREFIX = 'http://assets-qa.nlm.nih.gov/assets/3.4.1/'

# Auth/Auth settings

AUTHENTICATION_BACKENDS = (
    # 'django.contrib.auth.backends.ModelBackend',
    'nlm.occs.casauth.backends.CASBackend',
)

CAS_LOGIN_URL = 'https://login-prod.nlm.nih.gov/cas/'

CAS_CREATE_USER = False

ADMIN_GROUP = 'admin'

# Tell the 'assets_static' template tag
ASSETS_STATIC_REMOTE_PREFIX = '//assets-qa.nlm.nih.gov/assets/3.4.1/'

# To address the issue of https versus http:

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

CSRF_COOKIE_HTTPONLY = True

CSRF_COOKIE_SECURE = True
